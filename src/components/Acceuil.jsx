import React, { useState, useEffect, useRef } from "react";
import { motion } from "framer-motion";
import { useInView } from "react-intersection-observer";
import saturn from "../assets/images/saturn.png";
const Acceuil = () => {
  const [position, setPosition] = useState({ x: 0, y: 0 });

  useEffect(() => {
    const handleMouseMove = (e) => {
      const { clientX, clientY } = e;

      // Limiter le dÃ©placement Ã  50 pixels
      const newX = Math.min(
        position.x + 50,
        Math.max(position.x - 50, clientX)
      );
      const newY = Math.min(
        position.y + 50,
        Math.max(position.y - 50, clientY)
      );

      setPosition({ x: newX, y: newY });
    };

    document.addEventListener("mousemove", handleMouseMove);

    return () => {
      document.removeEventListener("mousemove", handleMouseMove);
    };
  }, [position]);

  const divStyle = {
    width: "50px",
    height: "50px",
    backgroundColor: "blue",
    position: "absolute",
    transform: `translate(${position.x / 35}%, ${position.y / 35}%)`,
    transition: "transform 0.2s",
  };

  const targetTitleReff = useRef(null);
  const array = ["DÃ©veloppeur", "Front-end", "CrÃ©atif", "PassionnÃ©"];

  let wordIndex = 0;
  let letterIndex = 0;

  // Identifiant de l'intervalle utilisÃ© pour la mise Ã  jour du texte
  let intervalId;

  useEffect(() => {
    // Fonction qui crÃ©e une nouvelle lettre dans le titre
    const createLetter = () => {
      const letter = document.createElement("span");
      targetTitleReff.current.appendChild(letter);
      letter.textContent = array[wordIndex][letterIndex];
    };

    // Fonction qui met Ã  jour le texte avec la lettre courante du mot courant
    const updateText = () => {
      if (letterIndex < array[wordIndex].length) {
        createLetter();
        letterIndex++;
      } else {
        // Si toutes les lettres ont Ã©tÃ© ajoutÃ©es, arrÃªtez de mettre Ã  jour le texte
        clearInterval(intervalId);
        setTimeout(() => {
          eraseText();
        }, 1000);
      }
    };

    // Fonction qui efface le texte lettre par lettre
    const eraseText = () => {
      const text = targetTitleReff.current;
      if (text.childNodes.length === 0) {
        wordIndex = (wordIndex + 1) % array.length;
        letterIndex = 0;
        intervalId = setInterval(updateText, 200);
      } else {
        text.removeChild(text.lastChild);
        setTimeout(() => {
          eraseText();
        }, 50);
      }
    };

    // Commencez Ã  mettre Ã  jour le texte dÃ¨s que le composant est montÃ©
    intervalId = setInterval(updateText, 100);

    return () => {
      clearInterval(intervalId);
    };
  }, []);

  const [ref, inView] = useInView({
    threshold: 0,
  });

  return (
    <main className="article-acceuil" id="accueil">
      <article className=" div-titles">
        <h1 className="target-title">
          <span>&#123;</span> Je suis <span>&#125;</span>
        </h1>

        <h1 ref={targetTitleReff} className="target-title-second"></h1>
        <p className="text-acceuil">
          ğŸ‘‹ Moi c'est Bob, un passionnÃ© de dÃ©veloppement et de graphisme,
          spÃ©cialisÃ© en React et Node.Js. Mon objectif est de crÃ©er des
          interfaces web interactives et esthÃ©tiques en utilisant les derniÃ¨res
          technologies. Je suis constamment Ã  l'affÃ»t des tendances et des
          meilleures pratiques pour vous offrir la meilleure expÃ©rience
          utilisateur !
        </p>
        <motion.p
          id="text-code"
          ref={ref}
          initial={{ y: 200, opacity: 0 }}
          animate={inView ? { y: 0, opacity: 1 } : {}}
          transition={{
            duration: 1,
            delay: 0.4,
            type: "spring",
            stiffness: 80,
          }}
        >
          + 1400h de code ğŸš€
        </motion.p>
      </article>

      <motion.div
        className="cercle-1"
        initial={{ scale: 0, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{
          duration: 1.3,
          delay: 0.4,
        }}
      >
        <div className="cercle-2">
          <div className="cercle-3">
            <div className="cercle-4">
              <img src={saturn} alt="" className="cosmonaute" />
            </div>
          </div>
        </div>
      </motion.div>

      <div style={divStyle} id="planet" className="planet1"></div>
      <div style={divStyle} id="planet" className="planet2"></div>
      <div style={divStyle} id="planet" className="planet3"></div>
      <div style={divStyle} id="planet" className="planet4"></div>

      <div id="diamond" className="diamond1"></div>
      <div id="diamond" className="diamond2"></div>
      <div id="diamond" className="diamond3"></div>
      <div id="diamond" className="diamond4"></div>
      <div id="diamond" className="diamond5"></div>
      <div id="diamond" className="diamond6"></div>
      <div id="diamond" className="diamond7"></div>
      <div id="diamond" className="diamond8"></div>
      <div id="diamond" className="diamond9"></div>
      <div id="diamond" className="diamond10"></div>
      <div id="diamond" className="diamond11"></div>
      <div id="diamond" className="diamond12"></div>
    </main>
  );
};

export default Acceuil;
